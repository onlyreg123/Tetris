type: edu
custom_name: I Like to Move It!
files:
- name: tetris/game3.py
  visible: true
  text: |+
    import numpy as np

    CELLS_ROWS = 4
    CELLS_COLS = 4

    def create_empty(rows, columns, default_char='-'):
        return np.full((rows, columns), default_char)

    def print_cell(cell):
        arr = np.array(['0' if idx in cell else '-' for idx in range(CELLS_ROWS * CELLS_COLS)])
        mtx = arr.reshape(CELLS_ROWS, CELLS_COLS)
        for r in range(CELLS_ROWS):
            print(' '.join(mtx[r]))

    def create_piece():
        qqq = [1, 5, 9, 13]
        arr = np.array(['0' if idx in qqq else '-' for idx in range(CELLS_ROWS * CELLS_COLS)])
        cell = arr.reshape(CELLS_ROWS, CELLS_COLS)
        print_cell(cell)
        return cell

    p_O = [[5, 6, 9, 10], [5, 6, 9, 10], [5, 6, 9, 10], [5, 6, 9, 10]]

    p_I = [[1, 5, 9, 13], [4, 5, 6, 7], [1, 5, 9, 13], [4, 5, 6, 7]]
    p_S = [[5, 6, 8, 9], [5, 9, 10, 14], [5, 6, 8, 9], [5, 9, 10, 14]]
    p_Z = [[4, 5, 9, 10], [2, 5, 6, 9], [4, 5, 9, 10], [2, 5, 6, 9]]

    p_T = [[1, 4, 5, 6], [1, 4, 5, 9], [4, 5, 6, 9], [1, 5, 6, 9]]
    p_J = [[2, 6, 9, 10], [4, 5, 6, 10], [1, 2, 5, 9], [0, 4, 5, 6]]
    p_L = [[1, 5, 9, 10], [2, 4, 5, 6], [0, 1, 5, 9], [8, 4, 5, 6]]

    pieces = {"O": p_O, "I": p_I, "S": p_S, "Z": p_Z, "T": p_T, "J": p_J, "L": p_L}

    piece = input()
    print_cell([])
    print()
    for seg in pieces[piece]:
        print_cell(seg)
        print()
    print_cell(pieces[piece][0])

    #
    # for k, v in pieces.items():
    #     print(k)
    #     for seg in v:
    #         print_cell(seg)
    #         print()

  learner_created: false
- name: tests.py
  visible: false
  text: |
    from hstest.stage_test import StageTest, List
    from hstest.test_case import TestCase
    from hstest.check_result import CheckResult


    class Tetris(StageTest):
        def generate(self) -> List[TestCase]:
            return [
                TestCase(stdin='I\n10 20\nrotate\nright\nright\ndown\nrotate\nleft\nleft\nexit',
                         attach=('',
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n\n'
                                 '- - - - 0 - - - - -\n- - - - 0 - - - - -\n- - - - 0 - - - - -\n- - - - 0 - - - - -\n- - - - - - - - - -\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n\n'
                                 '- - - - - - - - - -\n- - - 0 0 0 0 - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - 0 0 0 0 - -\n- - - - - - - - - -\n- - - - - - - - - -\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - 0 0 0 0 -\n- - - - - - - - - -\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - 0 0 0 0 -\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n'
                                 '- - - - - - 0 - - -\n- - - - - - 0 - - -\n- - - - - - 0 - - -\n- - - - - - 0 - - -\n- - - - - - - - - -\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n'
                                 '- - - - - - - - - -\n- - - - - 0 - - - -\n- - - - - 0 - - - -\n- - - - - 0 - - - -\n- - - - - 0 - - - -\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - 0 - - - - -\n- - - - 0 - - - - -\n- - - - 0 - - - - -\n'
                                 '- - - - 0 - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n\n'
                                 )),
                TestCase(stdin='T\n10 24\nleft\nleft\nrotate\nright\nrotate\nexit',
                         attach=('',
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n\n'
                                 '- - - - 0 - - - - -\n- - - - 0 0 - - - -\n- - - - 0 - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n\n'
                                 '- - - - - - - - - -\n- - - 0 - - - - - -\n- - - 0 0 - - - - -\n- - - 0 - - - - - -\n- - - - - - - - - -\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - 0 - - - - - - -\n- - 0 0 - - - - - -\n- - 0 - - - - - - -\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - 0 - - - - - - -\n- 0 0 0 - - - - - -\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - 0 - - - - - -\n'
                                 '- - 0 0 0 - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n'
                                 '- - - - 0 - - - - -\n- - - 0 0 - - - - -\n- - - - 0 - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n\n')),
                TestCase(stdin='L\n10 10\nrotate\nrotate\nexit',
                         attach=('',
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n\n'
                                 '- - - - 0 - - - - -\n- - - - 0 - - - - -\n- - - - 0 0 - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n\n'
                                 '- - - - - - - - - -\n- - - - - 0 - - - -\n- - - 0 0 0 - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - 0 0 - - - -\n- - - - - 0 - - - -\n- - - - - 0 - - - -\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n\n')),

                TestCase(stdin='Z\n10 8\nexit',
                         attach=('',
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n\n'
                                 '- - - - 0 0 - - - -\n- - - - - 0 0 - - -\n- - - - - - - - - -\n- - - - - - - - - -\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n\n')),

                TestCase(stdin='T\n10 8\nrotate\nrotate\nrotate\nrotate\nexit',
                         attach=('',
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n\n'
                                 '- - - - 0 - - - - -\n- - - - 0 0 - - - -\n- - - - 0 - - - - -\n- - - - - - - - - -\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n\n'
                                 '- - - - - - - - - -\n- - - - 0 - - - - -\n- - - 0 0 0 - - - -\n- - - - - - - - - -\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - 0 - - - -\n- - - - 0 0 - - - -\n'
                                 '- - - - - 0 - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - 0 0 0 - - -\n'
                                 '- - - - - 0 - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n\n'
                                 '- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n- - - - - - - - - -\n'
                                 '- - - - 0 - - - - -\n- - - - 0 0 - - - -\n- - - - 0 - - - - -\n- - - - - - - - - -\n\n'
                                 ))

            ]

        def check(self, reply: str, attach):

            feedback, answer = attach

            board = answer.strip().split('\n\n')
            reply_board = reply.strip().split('\n\n')

            if len(board) != len(reply_board):
                return CheckResult.wrong(
                    "A field with {0} grids is expected to be printed. Found {1} grids".format(len(board),
                                                                                               len(reply_board)))

            line = [grid.strip().split('\n') for grid in board]
            line_reply = [grid.strip().split('\n') for grid in reply_board]

            if len(line) != len(line_reply):
                return CheckResult.wrong(
                    "A grid with {0} rows is expected to be printed. Found {1} rows".format(len(line), len(line_reply)))

            for j in range(len(line)):
                line_columns = [one.strip().split(' ') for one in line[j]]
                reply_columns = [one.strip().split(' ') for one in line_reply[j]]

                if len(line_columns) != len(reply_columns):
                    return CheckResult.wrong(
                        f"A grid with {line_columns} columns is expected to be printed. Found {reply_columns} columns")

                for one_line in reply_columns:
                    for symbol in one_line:
                        if symbol not in ('0', '-'):
                            return CheckResult.wrong(
                                "The field should contain zero (0) or short-dash (-) symbols. Found {}".format(symbol))

            for i in range(len(reply_board)):
                reply_board_per_line = reply_board[i].split('\n')
                answer_board_per_line = board[i].split('\n')

                for j in range(len(reply_board_per_line)):
                    if reply_board_per_line[j] != answer_board_per_line[j]:
                        return CheckResult.wrong(
                            f"Wrong line {j + 1} in grid {i + 1}: Should be {answer_board_per_line[j]} instead of {reply_board_per_line[j]}")

            return CheckResult.correct()


    if __name__ == '__main__':
        Tetris('tetris.game').run_tests()
  learner_created: false
feedback_link: https://hyperskill.org/projects/147/stages/792/implement#comment
status: Solved
feedback:
  message: Congratulations!
  time: Wed, 25 Aug 2021 15:35:23 UTC
record: 1
